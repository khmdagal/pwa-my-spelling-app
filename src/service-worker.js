import { clientsClaim } from 'workbox-core';
import { ExpirationPlugin } from 'workbox-expiration';
import { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';
import { registerRoute } from 'workbox-routing';
import { StaleWhileRevalidate } from 'workbox-strategies';

clientsClaim();

// Precache all assets generated by the build process
precacheAndRoute(self.__WB_MANIFEST);

// Handle all navigation requests by serving the index.html
const fileExtensionRegexp = new RegExp('/[^/?]+\\.[^/]+$');
registerRoute(
  ({ request, url }) => {
    // If this isn't a navigation request, skip it
    if (request.mode !== 'navigate') {
      return false;
    }

    // Exclude URLs starting with /_ or containing a file extension
    if (url.pathname.startsWith('/_') || url.pathname.match(fileExtensionRegexp)) {
      return false;
    }

    // Return true to indicate this is a navigation request
    return true;
  },
  createHandlerBoundToURL(process.env.PUBLIC_URL + '/index.html')
);

// Cache images with a stale-while-revalidate strategy
registerRoute(
  ({ url }) => url.origin === self.location.origin && url.pathname.endsWith('.png'),
  new StaleWhileRevalidate({
    cacheName: 'images',
    plugins: [
      // Only cache up to 50 images
      new ExpirationPlugin({ maxEntries: 50 }),
    ],
  })
);

// Handle the 'SKIP_WAITING' message to activate the service worker immediately
self.addEventListener('message', (event) => {
  if (event.data && event.data.type === 'SKIP_WAITING') {
    self.skipWaiting();
  }
});
